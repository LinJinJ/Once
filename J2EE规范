一，概念
       J2EE（Java 2 Enterprise Edition） 是建立在Java2平台上的企业级应用的解决方式。J2EE技术的基础便是Java2平台
    不但有J2SE平台的全部功能，同一时候还提供了对EJB、Servlet、JSP、XML等技术的全面支持。其最终目标是成为一个
    支持企业级应用开发的体系结构，简化企业解决方式的开发、部署和管理等复杂问题。其实，J2EE已经成为企业级开发的
    企业标准和首选平台。J2EE不是一个产品，而是一系列的标准
    
二、J2EE的十三个规范
    1、JDBC(Java DatabaseConnectivity) : Java数据库连接
        JDBC为java开发人员提供一个行业标准API，能够在java应用与关系数据库之间建立起独立数据库的连接。也就是说JDBC
      API为访问不同的数据库提供了一种统一的途径。同时我们会发现事实上JDBC与ODBC非常相似，像ODBC一样,JDBC对开发
      人员屏蔽一些细节问题，另外，JDBC对数据库的访问也具有平台无关系。即在Linux上和windows上连接数据库是一样的。
      
    2、JNDI(Java Naming and DirectoryInterfaces) : Java命名和文件接口
         JNDI是一个java应用程序设计接口（API），为开发中提供了查找和访问命名和文件夹服务的通用、统一调度方式，它是
       构建在DNS(Domain Name System,域名系统)、LDAP(LDAP是轻量文件夹访问协议，英文全称是LightweightDirectory
       Access Protocol,一般简称为LDAP)等服务上。
        
    3、EJB(Enterprise JavaBean) 企业级Java Beans
         J2EE技术之所以赢得广泛重视的原因之中的一个就是EJB。它提供了一个框架来开发和实施分布式商务逻辑，由此非常显著
      的简化了具有可伸缩性和高度复杂的企业级应用程序的开发。EJB规范定义了EJB组件在何时怎么与它们的容器进行交互作用。
      容器负责提供公用的服务，比如文件夹服务，事务管理，安全性，资源缓冲池以及容错性。
      
         总的来说，EJB是实现分布式业务逻辑的java组件。“企业”意味着应用的扩展性、可靠性、可用性、安全性、事务性以
      及分布性。而EJB为客户提供可分布和可部署的业务逻辑服务，而且拥有良好的接口。在提供管理和控制服务的容器运行，
      而且是在应用服务之间的可重用的。
      
     4、RMI(Remote MethodInvocation) : 远程方法调用
          远程方法调用RNI是基于java的分布式编程模型。同意对象使用sstub(为屏蔽客户调用远程主机上的对象，必须提供某
      种方式来模拟本地对象，这样的本地对象称为存根（stub）,存根负责接收本地方法的调用，并将它们委派给各自的详细
      实现对象)和skeleton(Skeleton接口仅供RMI实现单独调用，远程对象的skeketon是一个将调用指派给实际远程对象实
      现的server端实体，已过时)调用远程的对象，此外RNO使用系列化在两个对象间通过数据传输.

     5、JavaIDL/CORBA(JavaInterfaceDefiniyion Language/Commom Object Request Broker Architecture) : 
               Java接口定义语言/公用对象请求代理程序体系结构
           在java IDL的支持下，开发者能够将Java和CORBA集成在一起。它们能够创建对象并使之能够在CORBA 
       ORB（ORB(Object Request Broker)对象请求代管者）中展开，或者他们还能够创建Java类并做为和其他ORB一起
       展开的CORBA对象客户。
       后一种方法提供了第二途径，通过它能被用于你的新的应用和旧系统相集成。
      
     6、JSP(Java Server Pages) : Java动态页面
            JSP执行于server端；动态公布的语言。是java servlet技术的发展和自然扩展，将转化为servlet；依据client
        请求创建动态web页面的文本文件，是J2EE的“视图”组件；其包含HTML标签、JSP标签、以及java代码。
        
     7、Java Servlet
            Servlet是一种小型的Java程序，它扩展了webserver的功能。作为一种server的应用，当被请求时运行，这和
         CGI Per(通用网关接口CGI。是一组标准定义之间交换信息的Webserver和自己定义脚本。)脚本非常相似，Servlet
         提供的功能大多和JSP类似，只是实现的方式不同。JSP一般是大多数的HTML代码中嵌入少量的Java代码，而Servlet
         所有由Java写成而且生成HTML。
              也就是说，servlet是java类，基于Http协议的请求/响应模式，同web客户打交道。HttpServlet的特点是：
         由容器管理，能够产生动态的内容，能够在本地session中存储客户数据。
              
              applet：小应用程序是采用Java编程语言编写的程序。该程序能够包括在HTML(标记语言的一个应用)页中。与
          页中图像的方式大致同样。  .
          
     8、XML(Extemsible MarkupLanguage) 可扩展标记语言
            XML（标准通用标记语言的子集）是一种能够用来定其他标记语言的语言。它被用来在不同的商务过程中共享数据
          XML的发展和java是相互独立的，可是，它和Java具有的同样目标是平台独立性。
          
     9、JMS(Java MessageService) : Java消息服务
            JMS是用于和面向对象消息的中间件（中间件是一种独立的系统软件或服务程序，分布式应用软件借助
          这样的软件在不同的技术之间共享资源。中间件位于客户机/server的操作系统之上，管理计算机资源和网络通讯。
          是连接两个独立应用程序或独立系统的软件。）相互通信的应用程序接口。JMS是Java API,提供了一种通用的方式
          创建、发送、接受好读取企业信息通信系统的信息。
          而且该接口支持有：点对点模型、公布/订阅模型、保证消息分布以及事务会话等等。
          
     10、JTA(Java Transactin API) : Java事务API
            JTA定义了一种标准API，应用程序由此能够访问各种事务监控，JTA事务比JDBC事务更强大。一个JTA事务能够有
          多个参与者，而一个JDBC事务则被限定在一个单一的数据库连接。
          而且为J2EE平台提供了分布式事务服务。Java事务API可以横跨的包含：EJB访问、JDBC连接以及JMS连接。
          
      11.JTS(Java TransactionService) Java事务
            Java TransactionService是J2EE架构的关键元素。它与Java Transaction API结合在一起，使我们可以构建
          对于各种系统和网络故障都很健壮的分布式应用程序。
            一个分布式事务（distributedtransaction）包含一个事务管理器（transaction manager）和一个或多个资源
          管理器（resource manager）。
            一个资源管理器（resource manager）是随意类型的持久化数据库存储。事务管理器（transaction manager）
          承担着全部事务参与单元者的相互通讯的责任。
          
      12、JavaMail 
            JavaMail是用于存取邮件server的API，它提供了一套邮件server的抽象类，不仅支持SMTPserver,也支持IMAPserver.
       
      13、JAF(JavaBeans ActivationFramework) : JavaBeans活动框架
           Java Mail利用JAF来处理MIME编码的邮件附件，MIME的字节流可以被转换成java对象，大多数应用都可以不需要直接
         使用JAF.  
       
     
       
